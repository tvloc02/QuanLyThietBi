package com.hethong.baotri.dieu_khien.nguoi_dung;

import com.hethong.baotri.dich_vu.nguoi_dung.NguoiDungService;
import com.hethong.baotri.dto.nguoi_dung.NguoiDungDTO;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

/**
 * ‚úÖ WEB CONTROLLER - X·ª≠ l√Ω giao di·ªán HTML cho qu·∫£n l√Ω ng∆∞·ªùi d√πng
 */
@Controller
@RequestMapping("/nguoi-dung/nguoi-dung")
@RequiredArgsConstructor
@Slf4j
public class NguoiDungWebController {

    private final NguoiDungService nguoiDungService;

    /**
     * ‚úÖ Hi·ªÉn th·ªã danh s√°ch ng∆∞·ªùi d√πng - CH·ªà ADMIN M·ªöI V√ÄO ƒê∆Ø·ª¢C
     */
    @GetMapping("/danh-sach-nguoi-dung")
    @PreAuthorize("hasAuthority('QUAN_TRI_VIEN') or hasAuthority('QUAN_LY_NGUOI_DUNG_XEM')")
    public String danhSachNguoiDung(Model model,
                                    @RequestParam(defaultValue = "0") int page,
                                    @RequestParam(defaultValue = "10") int size,
                                    @RequestParam(required = false) String search) {

        log.info("üîç Truy c·∫≠p danh s√°ch ng∆∞·ªùi d√πng - page: {}, size: {}, search: {}", page, size, search);

        try {
            Pageable pageable = PageRequest.of(page, size);
            Page<NguoiDungDTO> danhSachNguoiDung;

            if (search != null && !search.trim().isEmpty()) {
                danhSachNguoiDung = nguoiDungService.timKiemNguoiDung(search.trim(), pageable);
                model.addAttribute("search", search.trim());
                log.info("üîç T√¨m ki·∫øm ng∆∞·ªùi d√πng v·ªõi t·ª´ kh√≥a: [{}]", search.trim());
            } else {
                danhSachNguoiDung = nguoiDungService.layDanhSachNguoiDung(pageable);
            }

            // ‚úÖ Th√™m th√¥ng tin vai tr√≤ cho t·ª´ng ng∆∞·ªùi d√πng
            danhSachNguoiDung.getContent().forEach(nguoiDung -> {
                try {
                    // L·∫•y danh s√°ch vai tr√≤ t·ª´ database
                    String tenDangNhap = nguoiDung.getTenDangNhap();
                    var danhSachVaiTro = nguoiDungService.layDanhSachVaiTro(tenDangNhap);

                    // T·∫°o chu·ªói hi·ªÉn th·ªã vai tr√≤
                    String vaiTroDisplay = danhSachVaiTro.isEmpty() ?
                            "Ch∆∞a c√≥ vai tr√≤" : String.join(", ", danhSachVaiTro);

                    // Th√™m thu·ªôc t√≠nh t·∫°m th·ªùi (n·∫øu DTO c√≥ setter)
                    // nguoiDung.setVaiTroDisplay(vaiTroDisplay);

                } catch (Exception e) {
                    log.warn("‚ö†Ô∏è Kh√¥ng th·ªÉ l·∫•y vai tr√≤ cho user: {}", nguoiDung.getTenDangNhap());
                }
            });

            model.addAttribute("danhSachNguoiDung", danhSachNguoiDung);
            model.addAttribute("currentPage", page);
            model.addAttribute("totalPages", danhSachNguoiDung.getTotalPages());
            model.addAttribute("totalItems", danhSachNguoiDung.getTotalElements());
            model.addAttribute("title", "Danh s√°ch ng∆∞·ªùi d√πng");

            log.info("‚úÖ Load th√†nh c√¥ng {} ng∆∞·ªùi d√πng", danhSachNguoiDung.getTotalElements());
            return "nguoi-dung/danh-sach-nguoi-dung";

        } catch (Exception e) {
            log.error("‚ùå L·ªói khi load danh s√°ch ng∆∞·ªùi d√πng: {}", e.getMessage(), e);
            model.addAttribute("errorMessage", "Kh√¥ng th·ªÉ t·∫£i danh s√°ch ng∆∞·ªùi d√πng: " + e.getMessage());
            model.addAttribute("title", "L·ªói h·ªá th·ªëng");
            return "error/500";
        }
    }

    /**
     * ‚úÖ Hi·ªÉn th·ªã form th√™m ng∆∞·ªùi d√πng m·ªõi
     */
    @GetMapping("/them-moi")
    @PreAuthorize("hasAuthority('QUAN_TRI_VIEN') or hasAuthority('QUAN_LY_NGUOI_DUNG_THEM')")
    public String formThemNguoiDung(Model model) {
        log.info("üìù Hi·ªÉn th·ªã form th√™m ng∆∞·ªùi d√πng m·ªõi");

        model.addAttribute("nguoiDung", new NguoiDungDTO());
        model.addAttribute("title", "Th√™m ng∆∞·ªùi d√πng m·ªõi");
        model.addAttribute("action", "/nguoi-dung/them-moi");
        model.addAttribute("method", "POST");

        return "nguoi-dung/form";
    }

    /**
     * ‚úÖ X·ª≠ l√Ω form th√™m ng∆∞·ªùi d√πng
     */
    @PostMapping("/them-moi")
    @PreAuthorize("hasAuthority('QUAN_TRI_VIEN') or hasAuthority('QUAN_LY_NGUOI_DUNG_THEM')")
    public String xuLyThemNguoiDung(@ModelAttribute NguoiDungDTO nguoiDungDTO, Model model) {
        log.info("‚ûï X·ª≠ l√Ω th√™m ng∆∞·ªùi d√πng m·ªõi: {}", nguoiDungDTO.getTenDangNhap());

        try {
            nguoiDungService.taoNguoiDung(nguoiDungDTO);
            log.info("‚úÖ Th√™m ng∆∞·ªùi d√πng th√†nh c√¥ng: {}", nguoiDungDTO.getTenDangNhap());
            return "redirect:/nguoi-dung/danh-sach-nguoi-dung?success=created";
        } catch (Exception e) {
            log.error("‚ùå L·ªói khi th√™m ng∆∞·ªùi d√πng: {}", e.getMessage());
            model.addAttribute("errorMessage", "L·ªói: " + e.getMessage());
            model.addAttribute("nguoiDung", nguoiDungDTO);
            model.addAttribute("title", "Th√™m ng∆∞·ªùi d√πng m·ªõi");
            return "nguoi-dung/form";
        }
    }

    /**
     * ‚úÖ Hi·ªÉn th·ªã form ch·ªânh s·ª≠a ng∆∞·ªùi d√πng
     */
    @GetMapping("/chinh-sua/{id}")
    @PreAuthorize("hasAuthority('QUAN_TRI_VIEN') or hasAuthority('QUAN_LY_NGUOI_DUNG_SUA')")
    public String formChinhSuaNguoiDung(@PathVariable Long id, Model model) {
        log.info("‚úèÔ∏è Hi·ªÉn th·ªã form ch·ªânh s·ª≠a ng∆∞·ªùi d√πng ID: {}", id);

        try {
            NguoiDungDTO nguoiDung = nguoiDungService.timNguoiDungTheoId(id);
            model.addAttribute("nguoiDung", nguoiDung);
            model.addAttribute("title", "Ch·ªânh s·ª≠a ng∆∞·ªùi d√πng");
            model.addAttribute("action", "/nguoi-dung/chinh-sua/" + id);
            model.addAttribute("method", "POST");

            return "nguoi-dung/form";
        } catch (Exception e) {
            log.error("‚ùå L·ªói khi load ng∆∞·ªùi d√πng ƒë·ªÉ ch·ªânh s·ª≠a: {}", e.getMessage());
            return "redirect:/nguoi-dung/danh-sach-nguoi-dung?error=user_not_found";
        }
    }

    /**
     * ‚úÖ X·ª≠ l√Ω form ch·ªânh s·ª≠a ng∆∞·ªùi d√πng
     */
    @PostMapping("/chinh-sua/{id}")
    @PreAuthorize("hasAuthority('QUAN_TRI_VIEN') or hasAuthority('QUAN_LY_NGUOI_DUNG_SUA')")
    public String xuLyChinhSuaNguoiDung(@PathVariable Long id,
                                        @ModelAttribute NguoiDungDTO nguoiDungDTO,
                                        Model model) {
        log.info("üíæ X·ª≠ l√Ω ch·ªânh s·ª≠a ng∆∞·ªùi d√πng ID: {}", id);

        try {
            nguoiDungService.capNhatNguoiDung(id, nguoiDungDTO);
            log.info("‚úÖ C·∫≠p nh·∫≠t ng∆∞·ªùi d√πng th√†nh c√¥ng ID: {}", id);
            return "redirect:/nguoi-dung/danh-sach-nguoi-dung?success=updated";
        } catch (Exception e) {
            log.error("‚ùå L·ªói khi c·∫≠p nh·∫≠t ng∆∞·ªùi d√πng: {}", e.getMessage());
            model.addAttribute("errorMessage", "L·ªói: " + e.getMessage());
            model.addAttribute("nguoiDung", nguoiDungDTO);
            model.addAttribute("title", "Ch·ªânh s·ª≠a ng∆∞·ªùi d√πng");
            return "nguoi-dung/form";
        }
    }

    /**
     * ‚úÖ X√≥a ng∆∞·ªùi d√πng
     */
    @PostMapping("/xoa/{id}")
    @PreAuthorize("hasAuthority('QUAN_TRI_VIEN') or hasAuthority('QUAN_LY_NGUOI_DUNG_XOA')")
    public String xoaNguoiDung(@PathVariable Long id) {
        log.info("üóëÔ∏è X√≥a ng∆∞·ªùi d√πng ID: {}", id);

        try {
            nguoiDungService.xoaNguoiDung(id);
            log.info("‚úÖ X√≥a ng∆∞·ªùi d√πng th√†nh c√¥ng ID: {}", id);
            return "redirect:/nguoi-dung/danh-sach-nguoi-dung?success=deleted";
        } catch (Exception e) {
            log.error("‚ùå L·ªói khi x√≥a ng∆∞·ªùi d√πng: {}", e.getMessage());
            return "redirect:/nguoi-dung/danh-sach-nguoi-dung?error=delete_failed";
        }
    }

    /**
     * ‚úÖ Chi ti·∫øt ng∆∞·ªùi d√πng (view only)
     */
    @GetMapping("/chi-tiet/{id}")
    @PreAuthorize("hasAuthority('QUAN_TRI_VIEN') or hasAuthority('QUAN_LY_NGUOI_DUNG_XEM')")
    public String chiTietNguoiDung(@PathVariable Long id, Model model) {
        log.info("üëÅÔ∏è Xem chi ti·∫øt ng∆∞·ªùi d√πng ID: {}", id);

        try {
            NguoiDungDTO nguoiDung = nguoiDungService.timNguoiDungTheoId(id);

            // L·∫•y danh s√°ch vai tr√≤
            var danhSachVaiTro = nguoiDungService.layDanhSachVaiTro(nguoiDung.getTenDangNhap());

            model.addAttribute("nguoiDung", nguoiDung);
            model.addAttribute("danhSachVaiTro", danhSachVaiTro);
            model.addAttribute("title", "Chi ti·∫øt ng∆∞·ªùi d√πng");

            return "chi-tiet-nguoi-dung";
        } catch (Exception e) {
            log.error("‚ùå L·ªói khi load chi ti·∫øt ng∆∞·ªùi d√πng: {}", e.getMessage());
            return "redirect:/nguoi-dung/danh-sach-nguoi-dung?error=user_not_found";
        }
    }
}